// Generated by Dagger (https://dagger.dev).
package com.example.feature_profile.di;

import com.example.feature_profile.data.remote.UserProfileService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserProfileModule_ProvideProfileServiceFactory implements Factory<UserProfileService> {
  private final UserProfileModule module;

  private final Provider<Retrofit> retrofitProvider;

  public UserProfileModule_ProvideProfileServiceFactory(UserProfileModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public UserProfileService get() {
    return provideProfileService(module, retrofitProvider.get());
  }

  public static UserProfileModule_ProvideProfileServiceFactory create(UserProfileModule module,
      Provider<Retrofit> retrofitProvider) {
    return new UserProfileModule_ProvideProfileServiceFactory(module, retrofitProvider);
  }

  public static UserProfileService provideProfileService(UserProfileModule instance,
      Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideProfileService(retrofit));
  }
}
