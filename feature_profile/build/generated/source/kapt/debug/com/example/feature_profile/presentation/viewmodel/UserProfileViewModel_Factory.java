// Generated by Dagger (https://dagger.dev).
package com.example.feature_profile.presentation.viewmodel;

import com.example.feature_profile.domain.usecase.GetProfileInfoUseCase;
import com.example.feature_profile.domain.usecase.UploadProfilePicUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserProfileViewModel_Factory implements Factory<UserProfileViewModel> {
  private final Provider<GetProfileInfoUseCase> getProfileInfoUseCaseProvider;

  private final Provider<UploadProfilePicUseCase> uploadProfilePicUseCaseProvider;

  public UserProfileViewModel_Factory(Provider<GetProfileInfoUseCase> getProfileInfoUseCaseProvider,
      Provider<UploadProfilePicUseCase> uploadProfilePicUseCaseProvider) {
    this.getProfileInfoUseCaseProvider = getProfileInfoUseCaseProvider;
    this.uploadProfilePicUseCaseProvider = uploadProfilePicUseCaseProvider;
  }

  @Override
  public UserProfileViewModel get() {
    return newInstance(getProfileInfoUseCaseProvider.get(), uploadProfilePicUseCaseProvider.get());
  }

  public static UserProfileViewModel_Factory create(
      Provider<GetProfileInfoUseCase> getProfileInfoUseCaseProvider,
      Provider<UploadProfilePicUseCase> uploadProfilePicUseCaseProvider) {
    return new UserProfileViewModel_Factory(getProfileInfoUseCaseProvider, uploadProfilePicUseCaseProvider);
  }

  public static UserProfileViewModel newInstance(GetProfileInfoUseCase getProfileInfoUseCase,
      UploadProfilePicUseCase uploadProfilePicUseCase) {
    return new UserProfileViewModel(getProfileInfoUseCase, uploadProfilePicUseCase);
  }
}
