// Generated by Dagger (https://dagger.dev).
package com.example.feature_space.di;

import com.example.feature_space.data.remote.SpaceService;
import com.example.feature_space.domain.repository.SpacesRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SpaceModule_ProvideSpaceRepositoryFactory implements Factory<SpacesRepository> {
  private final Provider<SpaceService> apiProvider;

  public SpaceModule_ProvideSpaceRepositoryFactory(Provider<SpaceService> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public SpacesRepository get() {
    return provideSpaceRepository(apiProvider.get());
  }

  public static SpaceModule_ProvideSpaceRepositoryFactory create(
      Provider<SpaceService> apiProvider) {
    return new SpaceModule_ProvideSpaceRepositoryFactory(apiProvider);
  }

  public static SpacesRepository provideSpaceRepository(SpaceService api) {
    return Preconditions.checkNotNullFromProvides(SpaceModule.INSTANCE.provideSpaceRepository(api));
  }
}
