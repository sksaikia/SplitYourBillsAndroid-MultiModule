// Generated by Dagger (https://dagger.dev).
package com.example.feature_space.presentation.viewmodel;

import com.example.feature_space.domain.usecase.AddMembersToSpaceUseCase;
import com.example.feature_space.domain.usecase.CreateSpaceUseCase;
import com.example.feature_space.domain.usecase.EditSpaceUseCase;
import com.example.feature_space.domain.usecase.GetAllMembersForSpaceIdUseCase;
import com.example.feature_space.domain.usecase.GetAllSpaceByUserIdUsecase;
import com.example.feature_space.domain.usecase.GetSpecificSpaceDetailsBySpaceIdUseCase;
import com.example.feature_space.domain.usecase.GetTxnBalanceUseCase;
import com.example.feature_space.domain.usecase.GetTxnDetailsBySpaceIdUseCase;
import com.example.session.SessionManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SpaceViewModel_Factory implements Factory<SpaceViewModel> {
  private final Provider<CreateSpaceUseCase> createNewSpaceUseCaseProvider;

  private final Provider<GetAllSpaceByUserIdUsecase> getAllSpaceByUserIdUsecaseProvider;

  private final Provider<GetSpecificSpaceDetailsBySpaceIdUseCase> getSpecificSpaceDetailsBySpaceIdUseCaseProvider;

  private final Provider<EditSpaceUseCase> editSpaceUseCaseProvider;

  private final Provider<AddMembersToSpaceUseCase> addMembersToSpaceUseCaseProvider;

  private final Provider<GetAllMembersForSpaceIdUseCase> getAllMembersForSpaceIdUseCaseProvider;

  private final Provider<GetTxnDetailsBySpaceIdUseCase> getTxnDetailsBySpaceIdUseCaseProvider;

  private final Provider<GetTxnBalanceUseCase> getTxnbalanceUseCaseProvider;

  private final Provider<SessionManager> sessionManagerProvider;

  public SpaceViewModel_Factory(Provider<CreateSpaceUseCase> createNewSpaceUseCaseProvider,
      Provider<GetAllSpaceByUserIdUsecase> getAllSpaceByUserIdUsecaseProvider,
      Provider<GetSpecificSpaceDetailsBySpaceIdUseCase> getSpecificSpaceDetailsBySpaceIdUseCaseProvider,
      Provider<EditSpaceUseCase> editSpaceUseCaseProvider,
      Provider<AddMembersToSpaceUseCase> addMembersToSpaceUseCaseProvider,
      Provider<GetAllMembersForSpaceIdUseCase> getAllMembersForSpaceIdUseCaseProvider,
      Provider<GetTxnDetailsBySpaceIdUseCase> getTxnDetailsBySpaceIdUseCaseProvider,
      Provider<GetTxnBalanceUseCase> getTxnbalanceUseCaseProvider,
      Provider<SessionManager> sessionManagerProvider) {
    this.createNewSpaceUseCaseProvider = createNewSpaceUseCaseProvider;
    this.getAllSpaceByUserIdUsecaseProvider = getAllSpaceByUserIdUsecaseProvider;
    this.getSpecificSpaceDetailsBySpaceIdUseCaseProvider = getSpecificSpaceDetailsBySpaceIdUseCaseProvider;
    this.editSpaceUseCaseProvider = editSpaceUseCaseProvider;
    this.addMembersToSpaceUseCaseProvider = addMembersToSpaceUseCaseProvider;
    this.getAllMembersForSpaceIdUseCaseProvider = getAllMembersForSpaceIdUseCaseProvider;
    this.getTxnDetailsBySpaceIdUseCaseProvider = getTxnDetailsBySpaceIdUseCaseProvider;
    this.getTxnbalanceUseCaseProvider = getTxnbalanceUseCaseProvider;
    this.sessionManagerProvider = sessionManagerProvider;
  }

  @Override
  public SpaceViewModel get() {
    return newInstance(createNewSpaceUseCaseProvider.get(), getAllSpaceByUserIdUsecaseProvider.get(), getSpecificSpaceDetailsBySpaceIdUseCaseProvider.get(), editSpaceUseCaseProvider.get(), addMembersToSpaceUseCaseProvider.get(), getAllMembersForSpaceIdUseCaseProvider.get(), getTxnDetailsBySpaceIdUseCaseProvider.get(), getTxnbalanceUseCaseProvider.get(), sessionManagerProvider.get());
  }

  public static SpaceViewModel_Factory create(
      Provider<CreateSpaceUseCase> createNewSpaceUseCaseProvider,
      Provider<GetAllSpaceByUserIdUsecase> getAllSpaceByUserIdUsecaseProvider,
      Provider<GetSpecificSpaceDetailsBySpaceIdUseCase> getSpecificSpaceDetailsBySpaceIdUseCaseProvider,
      Provider<EditSpaceUseCase> editSpaceUseCaseProvider,
      Provider<AddMembersToSpaceUseCase> addMembersToSpaceUseCaseProvider,
      Provider<GetAllMembersForSpaceIdUseCase> getAllMembersForSpaceIdUseCaseProvider,
      Provider<GetTxnDetailsBySpaceIdUseCase> getTxnDetailsBySpaceIdUseCaseProvider,
      Provider<GetTxnBalanceUseCase> getTxnbalanceUseCaseProvider,
      Provider<SessionManager> sessionManagerProvider) {
    return new SpaceViewModel_Factory(createNewSpaceUseCaseProvider, getAllSpaceByUserIdUsecaseProvider, getSpecificSpaceDetailsBySpaceIdUseCaseProvider, editSpaceUseCaseProvider, addMembersToSpaceUseCaseProvider, getAllMembersForSpaceIdUseCaseProvider, getTxnDetailsBySpaceIdUseCaseProvider, getTxnbalanceUseCaseProvider, sessionManagerProvider);
  }

  public static SpaceViewModel newInstance(CreateSpaceUseCase createNewSpaceUseCase,
      GetAllSpaceByUserIdUsecase getAllSpaceByUserIdUsecase,
      GetSpecificSpaceDetailsBySpaceIdUseCase getSpecificSpaceDetailsBySpaceIdUseCase,
      EditSpaceUseCase editSpaceUseCase, AddMembersToSpaceUseCase addMembersToSpaceUseCase,
      GetAllMembersForSpaceIdUseCase getAllMembersForSpaceIdUseCase,
      GetTxnDetailsBySpaceIdUseCase getTxnDetailsBySpaceIdUseCase,
      GetTxnBalanceUseCase getTxnbalanceUseCase, SessionManager sessionManager) {
    return new SpaceViewModel(createNewSpaceUseCase, getAllSpaceByUserIdUsecase, getSpecificSpaceDetailsBySpaceIdUseCase, editSpaceUseCase, addMembersToSpaceUseCase, getAllMembersForSpaceIdUseCase, getTxnDetailsBySpaceIdUseCase, getTxnbalanceUseCase, sessionManager);
  }
}
