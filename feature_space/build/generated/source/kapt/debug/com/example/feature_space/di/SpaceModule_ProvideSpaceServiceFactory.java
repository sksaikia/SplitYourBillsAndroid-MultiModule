// Generated by Dagger (https://dagger.dev).
package com.example.feature_space.di;

import com.example.feature_space.data.remote.SpaceService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SpaceModule_ProvideSpaceServiceFactory implements Factory<SpaceService> {
  private final Provider<Retrofit> retrofitProvider;

  public SpaceModule_ProvideSpaceServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public SpaceService get() {
    return provideSpaceService(retrofitProvider.get());
  }

  public static SpaceModule_ProvideSpaceServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new SpaceModule_ProvideSpaceServiceFactory(retrofitProvider);
  }

  public static SpaceService provideSpaceService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(SpaceModule.INSTANCE.provideSpaceService(retrofit));
  }
}
