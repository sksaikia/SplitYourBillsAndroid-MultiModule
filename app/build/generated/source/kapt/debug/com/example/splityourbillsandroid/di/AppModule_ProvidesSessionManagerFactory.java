// Generated by Dagger (https://dagger.dev).
package com.example.splityourbillsandroid.di;

import android.content.Context;
import com.example.session.SessionManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesSessionManagerFactory implements Factory<SessionManager> {
  private final Provider<Context> contextProvider;

  public AppModule_ProvidesSessionManagerFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public SessionManager get() {
    return providesSessionManager(contextProvider.get());
  }

  public static AppModule_ProvidesSessionManagerFactory create(Provider<Context> contextProvider) {
    return new AppModule_ProvidesSessionManagerFactory(contextProvider);
  }

  public static SessionManager providesSessionManager(Context context) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesSessionManager(context));
  }
}
