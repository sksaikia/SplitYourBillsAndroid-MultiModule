// Generated by Dagger (https://dagger.dev).
package com.example.splityourbillsandroid.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesContextFactory implements Factory<Context> {
  private final Provider<Context> contextProvider;

  public AppModule_ProvidesContextFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public Context get() {
    return providesContext(contextProvider.get());
  }

  public static AppModule_ProvidesContextFactory create(Provider<Context> contextProvider) {
    return new AppModule_ProvidesContextFactory(contextProvider);
  }

  public static Context providesContext(Context context) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesContext(context));
  }
}
