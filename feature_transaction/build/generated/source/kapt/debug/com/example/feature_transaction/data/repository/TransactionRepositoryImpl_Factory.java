// Generated by Dagger (https://dagger.dev).
package com.example.feature_transaction.data.repository;

import com.example.feature_transaction.data.remote.TransactionService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TransactionRepositoryImpl_Factory implements Factory<TransactionRepositoryImpl> {
  private final Provider<TransactionService> apiProvider;

  public TransactionRepositoryImpl_Factory(Provider<TransactionService> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public TransactionRepositoryImpl get() {
    return newInstance(apiProvider.get());
  }

  public static TransactionRepositoryImpl_Factory create(Provider<TransactionService> apiProvider) {
    return new TransactionRepositoryImpl_Factory(apiProvider);
  }

  public static TransactionRepositoryImpl newInstance(TransactionService api) {
    return new TransactionRepositoryImpl(api);
  }
}
